# Subproject file for extension gamepad.
#
# Include this subproject in your App to enable access to the gamepad API
#
# NOTE: This file was originally written by the extension builder, but will not
# be overwritten (unless --force is specified) and is intended to be modified.

#
# Running the extension builder with --platform can cause additions to this file
# even after modification, to support additional platforms

display_name "Extensions/gamepad"

includepath h

files
{
    (h)
    gamepad.h

    ["interface"]
    (interface)
    gamepad_interface.cpp
    gamepad.defines.txt
}

defines
{
    IW_TRACE_CHANNEL_GAMEPAD_VERBOSE=2
}

if {{ not defined S3E_BUILD_S3ELOADER }}
{
    if {{ not defined IW_MKF_IWCRT}}
    {
        subproject iwutil
    }
}

#Autogenerated section for windows platform support. Deleting these two comment
#lines will cause the extension builder to re-output this section.
deployments
{
    win32-ext-dll="lib/win32/gamepad.dll"
}

#Autogenerated section for android platform support. Deleting these two comment
#lines will cause the extension builder to re-output this section.
#Include the extension's jar file during deployment
deployments
{
    android-external-jars="lib/android/gamepad.jar"
    android-so="lib/android/libgamepad.so"
}

#Autogenerated section for win10 platform support. Deleting these two comment
#lines will cause the extension builder to re-output this section.
#Include the extension's dll files during deployment
#Deploy script should look into subfolders (ARM|x86)/(Debug|Release) of that path
#Note that native extension .dll also has .winmd of the same name
deployments
{
    win10-ext-managed-dll="lib/win10/gamepadManaged.winmd"
    win10-ext-native-dll="lib/win10/gamepadExtension.dll"
}
